CREATE TABLE IF NOT EXISTS USERS( ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY, EMAIL VARCHAR(320) NOT NULL, NAME VARCHAR(100), CONSTRAINT PK_USER_ID PRIMARY KEY (ID), CONSTRAINT UQ_USER_EMAIL UNIQUE (EMAIL));
CREATE TABLE IF NOT EXISTS ITEMS( ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY, NAME VARCHAR(100), DESCRIPTION VARCHAR(1000), AVAILABLE BOOLEAN, OWNER BIGINT, CONSTRAINT PK_ITEM_ID PRIMARY KEY (ID), CONSTRAINT FK_ITEM_USER FOREIGN KEY (OWNER) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE RESTRICT); --CONSTRAINT FK_ITEM_REQUEST FOREIGN KEY (REQUEST) REFERENCES REQUESTS (ID) ON DELETE SET NULL ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS REQUESTS( ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY, DESCRIPTION VARCHAR(1000), REQUESTOR BIGINT NOT NULL, CREATED TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT PK_ITEM_REQUEST_ID PRIMARY KEY (ID), CONSTRAINT FK_REQUEST_USER FOREIGN KEY (REQUESTOR) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS REQUEST_ITEM( REQUEST_ID BIGINT, ITEM_ID BIGINT, CONSTRAINT FK_ITEM_ITEMS FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ID) ON DELETE CASCADE, CONSTRAINT FK_REQUEST_REQUESTS FOREIGN KEY (REQUEST_ID) REFERENCES REQUESTS (ID) ON DELETE CASCADE, PRIMARY KEY (REQUEST_ID, ITEM_ID));
CREATE TABLE IF NOT EXISTS BOOKING( ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY, START_DATE TIMESTAMP WITHOUT TIME ZONE, END_DATE TIMESTAMP WITHOUT TIME ZONE, ITEM_ID BIGINT, BOOKER_ID BIGINT, STATUS VARCHAR(20), CONSTRAINT PK_BOOKING_ID PRIMARY KEY (ID), CONSTRAINT FK_BOOKING_USER FOREIGN KEY (BOOKER_ID) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE RESTRICT, CONSTRAINT FK_BOOKING_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ID) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS COMMENTS( ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY, TEXT VARCHAR(1000), ITEM_ID BIGINT, AUTHOR_ID BIGINT, ADD_DATE TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT PK_COMMENT_ID PRIMARY KEY (ID), CONSTRAINT FK_COMMENT_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ID) ON DELETE CASCADE ON UPDATE RESTRICT);